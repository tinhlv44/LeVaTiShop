@model LeVaTiShop.Models.Product
@{
    ViewBag.Title = Model.nameProduct;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    decimal disPrice = 0;
    if (Model.discountedPrice.HasValue)
    {
        disPrice = Model.discountedPrice.Value;
    }
    string namePro = Model.nameProduct;/*string.Join(" ", Model.nameProduct.ToLower().Split(' '));*/

    LeVaTiShop.Models.function f = new LeVaTiShop.Models.function();
    List<String> sColor;
    List<String> sImage;
    f.analysisImage(Model.image, out sColor, out sImage);
    string input = Model.specifications;

    List<string> lfield;
    List<string> lvalue;
    f.analysisSpecifications(input, out lfield, out lvalue);

    int ram = lfield.FindIndex(item => item == "RAM");
    int capacity = lfield.FindIndex(item => item == "Bộ nhớ thẻ nhớ");

    f.amountProduct(Model.inventory, out List<string> amount);
}




<div class="home_container">
    <div class="cps">
        <ul class="cps_list">
            <li class="cps_item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
            <li class="cps_ic">❯</li>
            <li class="cps_item">@Model.Brand.nameBrand</li>
            <li class="cps_ic">❯</li>
            <li class="cps_item">@Model.nameProduct</li>
        </ul>
    </div>
    <div class="proinfor">
        <h2 class="proinfor_heading">@Model.nameProduct</h2>
        <div class="proinfor_box">
            <div class="proinfor_img">
                <img src="~/set/img/product/@namePro/@sImage[0]" alt="" class="proinfor_cimg">
            </div>
            <div class="proinfor_describe">
                <div class="proi_coin">
                    @if (Model.isDiscounted)
                    {
                        <div class="coinpre">@disPrice.ToString("N0") VNĐ</div>
                        <div class="coinpast">@Model.price.ToString("N0") VNĐ</div>

                    }
                    else
                    {
                        <div class="coinpre">@Model.price.ToString("N0") VNĐ</div>
                    }
                </div>
                <div class="proi_ct">
                    <ul class="proi_list">
                        <li class="proi_item">
                            <h4 class="proi_name">Lựa chọn phiên bản mong muốn:</h4>
                        </li>
                        <li class="proi_item">
                            <p class="proi_name"><strong>Màu: </strong></p>
                            @for (int i = 0; i < sImage.Count; i++)
                            {
                                <div class="proi_box">
                                    <div class="proi_boxcolor" style="background-color:@sColor[i]" onclick="selection('color', @i, '@Model.nameProduct/@sImage[i]', '@amount[i]')"></div>
                                </div>
                            }
                        </li>
                        @if (ram != -1)
                        {
                            <li class="proi_item">
                                <p class="proi_name"><strong>Bộ nhớ: </strong>@lvalue[ram]</p>
                            </li>
                        }
                        @if (capacity != -1)
                        {
                            <li class="proi_item">
                                <p class="proi_name"><strong>Bộ nhớ thẻ nhớ: </strong>@lvalue[capacity]</p>
                            </li>
                        }
                        <li class="proi_item">
                            <p class="proi_name"><strong>Bảo hành: </strong>12 tháng</p>
                        </li>

                    </ul>
                </div>
            </div>
            <div class="proi_pay">
                <div class="proi_payctbox">
                    @Html.Raw("<p class='proi_payct'><b>Mô tả: </b>" + Model.description + "</p>")
                    <p id='amount' class='proi_pcx align-content-end'>Số lượng còn: @amount[0]</p>
                </div>
                <div class="proi_btn">
                    @{
                        string href = amount[0] != "0" ? Url.Action("FastCheckout", "Cart", new { id = Model.idProduct, img = sImage[0], price = Model.isDiscounted ? Model.discountedPrice : Model.price }) : "#";
                        string onclick = amount[0] != "0" ? "" : "end_stock()";
                    }
                    <a href="@href" onclick="@onclick" id="fastCheck" class="btn btn_green proi_btnl" data-product-id="@Model.idProduct" data-product-price="@(Model.isDiscounted ? Model.discountedPrice : Model.price)" data-product-image="@sImage[0]">Mua hàng</a>
                    <a onclick="@onclick" id="prot_cart" class="btn btn_green proi_btnr" data-product-id="@Model.idProduct" data-product-price="@(Model.isDiscounted ? Model.discountedPrice : Model.price)" data-product-image="@sImage[0]">
                        <i class="icon_cart_proi fa-solid fa-cart-shopping"></i>
                        Thêm vào giỏ hàng
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class="info_detail">
        <div class="tdetail_title">
            Thông số kĩ thuật
        </div>
        <div class="detail_table">
            <table>
                @for (int i = 0; i < lfield.Count(); i++)
                {
                    <tr class="tr@(i%2==0?"1":"0")">
                        <td class='detail_title'>@lfield[i]</td>
                        <td class='detail_centent'>@lvalue[i]</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    @* <div class="like-container">
            <span id="likeCount">Số lượt thích: 0</span>
            <div id="likeButton" class="like-button" onclick="toggleLike()"></div>
        </div>*@
    @Html.Action("Comment", "Home", new { id=Model.idProduct})
    
</div>
@*<style>
        .like-button {
            width: 30px;
            height: 30px;
            background-image: url('heart-light.png'); /* Hình trái tim nhạt */
            background-size: cover;
            cursor: pointer;
        }

            .like-button.liked {
                background-image: url('heart-dark.png'); /* Hình trái tim đậm */
            }
    </style>*@
<script>
    selection('color', 0, '@namePro/@sImage[0]', '@amount[0]');
    toastr.options = {
        closeButton: false,
        debug: false,
        newestOnTop: false,
        progressBar: true,
        positionClass: 'toast-top-center',
        preventDuplicates: false,
        onclick: null,
        showDuration: '300',
        hideDuration: '1000',
        timeOut: '5000',
        extendedTimeOut: '1000',
        showEasing: 'swing',
        hideEasing: 'linear',
        showMethod: 'fadeIn',
        hideMethod: 'fadeOut'
    };
    $(document).ready(function () {
        $('#prot_cart').on('click', function () {
            var productId = $(this).data('product-id');
            var productPrice = $(this).data('product-price');
            var productImage = $(this).data('product-image');

            // Gửi yêu cầu Ajax để thêm sản phẩm vào giỏ hàng
            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                method: 'POST',
                data: {
                    id: productId,
                    img: productImage,
                    price: productPrice
                },
                success: function (response) {
                    if (response.code) {
                        showId('cart_icon');
                        toastr.success(response.msg);
                    } else {
                        toastr.error(response.msg);
                    }
                },
                error: function () {
                    // Xử lý lỗi yêu cầu Ajax (nếu có)
                    alert('Đã xảy ra lỗi khi gửi yêu cầu.');
                }
            });
        });
    });
    $(document).ready(function () {
        $('#fastCheck').on('click', function () {
            var productId = $(this).data('product-id');
            var productPrice = $(this).data('product-price');
            var productImage = $(this).data('product-image');

            // Tạo URL chứa các tham số
            var url = '@Url.Action("FastCheckout", "Cart")';
            url += '?id=' + productId + '&img=' + encodeURIComponent(productImage) + '&price=' + productPrice;

            // Chuyển hướng trình duyệt đến URL của action FastCheckout
            window.location.href = url;
        });
    });



    var likeCount = 0;
    var isLiked = false;

    function toggleLike() {
        var likeButton = document.getElementById("likeButton");
        var likeCountElement = document.getElementById("likeCount");

        if (isLiked) {
            // Giảm số lượng được thích và xóa class "liked"
            likeCount--;
            likeButton.classList.remove("liked");
        } else {
            // Tăng số lượng được thích và thêm class "liked"
            likeCount++;
            likeButton.classList.add("liked");
        }

        // Cập nhật số lượng được thích trên giao diện
        likeCountElement.textContent = "Số lượt thích: " + likeCount;

        // Đảo ngược trạng thái đã thích
        isLiked = !isLiked;
    }
</script>



